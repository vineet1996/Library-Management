{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthenticationComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthenticationComponent,\n  children: [\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n        { path: '**', redirectTo: 'login' },\n        {\n            path: 'login',\n            component: LoginComponent,\n        },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule {\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NbAuthComponent } from '@nebular/auth';\n\n@Component({\n    selector: 'ngx-auth',\n    styleUrls: ['./auth.component.scss'],\n    template: ` <nb-layout>\n    <nb-layout-column>\n      <nb-card>\n        <nb-card-body>\n          <nb-auth-block>\n            <router-outlet></router-outlet>\n          </nb-auth-block>\n        </nb-card-body>\n      </nb-card>\n    </nb-layout-column>\n  </nb-layout>`,\n})\nexport class AuthenticationComponent implements  OnInit {\n    constructor() {}\n\n    ngOnInit() {\n\n    }\n}","import { NgModule } from '@angular/core';\n\nimport {\n  NbMenuModule,\n  NbSelectModule,\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbCheckboxModule,\n  NbLayoutModule,\n  NbInputModule,\n  \n} from '@nebular/theme';\n\nimport { ThemeModule } from '../@theme/theme.module';\nimport { AuthenticationRoutingModule } from './auth-routing.module';\nimport { AuthenticationComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport {  NbAuthModule } from '@nebular/auth';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptorService, ErrorInterceptorService } from '../_helpers';\n@NgModule({\n  imports: [\n    AuthenticationRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    NbSelectModule,\n    NbCardModule,\n    RouterModule,\n    NbButtonModule,\n    NbIconModule,\n    NbSpinnerModule,\n    NbCheckboxModule,\n    NbAuthModule,\n    NbLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbInputModule,\n  ],\n  declarations: [\n    AuthenticationComponent,\n    LoginComponent,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptorService, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptorService, multi: true },\n  ],\n})\nexport class AuthenticationModule {\n}\n","import { Component, OnDestroy, OnInit, Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbDialogService } from '@nebular/theme';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../../@service/authentication.service';\n@Component({\n    selector: 'ngx-login',\n    styleUrls: ['./login.component.scss'],\n    templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    returnUrl: string;\n    constructor(\n          private formBuilder: FormBuilder,\n          private route: ActivatedRoute,\n          private router: Router,\n          private authService: AuthenticationService,\n          private dialogService: NbDialogService) {\n            this.loginForm = this.formBuilder.group({\n                username: ['', [Validators.required]],\n                password: ['', [Validators.required]]\n            });\n            if (this.authService.currentUserValue) {\n                this.router.navigateByUrl('/pages');\n            }\n      }\n\n    ngOnInit() {\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    login() {\n        if(this.loginForm.valid) {\n            this.authService.login(this.loginForm.value).subscribe((data:any) => {\n                if(data.success) {\n                    this.router.navigateByUrl(this.returnUrl);\n                }\n                else {\n                    if(data.err == 'pwdwrg') {\n                        this.loginForm.get('password').setErrors({\"pwdwrg\": true});\n                    }\n                    if(data.err == 'nouser') {\n                        this.loginForm.get('username').setErrors({\"nouser\": true});\n                    }\n                }\n            })\n        }\n        \n    }\n\n    \n}","<h1 id=\"title\" class=\"title\"> Login</h1>\n\n<form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" aria-labelledby=\"title\">\n\n    <div class=\"form-control-group\">\n        <label class=\"label\" for=\"input-email\">User Name</label>\n        <input nbInput fullWidth formControlName=\"username\" name=\"username\" placeholder=\"User Name\">\n        <p class=\"caption status-danger\" *ngIf=\"loginForm.hasError('required','username')\">\n            Username is required!\n        </p>\n        <p class=\"caption status-danger\" *ngIf=\"loginForm.hasError('nouser','username')\">\n            User does not exist!\n        </p>\n    </div>\n\n    <div class=\"form-control-group\">\n        <span class=\"label-with-link\">\n            <label class=\"label\" for=\"input-password\">Password:</label>\n        </span>\n        <input nbInput fullWidth formControlName=\"password\" name=\"password\" type=\"password\">\n        <p class=\"caption status-danger\" *ngIf=\"loginForm.hasError('required','password')\">\n            Password is required!\n        </p>\n        <p class=\"caption status-danger\" *ngIf=\"loginForm.hasError('pwdwrg','password')\">\n            Password is wrong\n        </p>\n    </div>\n\n\n    <button nbButton fullWidth status=\"primary\" type=\"submit\" size=\"large\">Submit</button>\n</form>"],"sourceRoot":"webpack:///"}