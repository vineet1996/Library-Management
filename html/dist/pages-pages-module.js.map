{"version":3,"sources":["./src/app/@service/library.service.ts","./src/app/pages/addbookdialog/add-book.component.ts","./src/app/pages/addbookdialog/add-book.component.html","./src/app/pages/alertdialog/alert-dialog.component.ts","./src/app/pages/alertdialog/alert-dialog.component.html","./src/app/pages/issue/adminissue/admin-issue.component.ts","./src/app/pages/issue/adminissue/admin-issue.component.html","./src/app/pages/issue/issue.component.ts","./src/app/pages/issue/issue.component.html","./src/app/pages/issue/userissue/user-issue.component.ts","./src/app/pages/issue/userissue/user-issue.component.html","./src/app/pages/library/adminlibrary/admin-library.component.ts","./src/app/pages/library/adminlibrary/admin-library.component.html","./src/app/pages/library/library.component.ts","./src/app/pages/library/library.component.html","./src/app/pages/library/userlibrary/user-library.component.ts","./src/app/pages/library/userlibrary/user-library.component.html","./src/app/pages/miscellaneous/not-found/not-found.component.ts","./src/app/pages/miscellaneous/not-found/not-found.component.html","./src/app/pages/pages-menu.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.module.ts","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/returnalertdialog/return-alert.component.ts","./src/app/pages/returnalertdialog/return-alert.component.html"],"names":[],"mappings":"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","file":"pages-pages-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LibraryService {\n    httpOptions = {\n        headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        })\n    };\n    \n    constructor(private http: HttpClient,) {\n    }\n\n    // Creating new book by admin.\n    public createBook(data) {\n        return this.http.post('/book/createBook', data, this.httpOptions);\n    }\n\n    // Get all books for the library to all users.\n    public getAllBooks() {\n        return this.http.get('/book/getBooks');\n    }\n\n    // Update book by admin.\n    public updateBook(data) {\n        return this.http.post('/book/updateBook', data, this.httpOptions);\n    }\n\n    // Delete book by admin.\n    public deleteBook(data) {\n        return this.http.post('/book/deleteBook', data, this.httpOptions);\n    }\n\n    // Search books by string.\n    public getSearchResults(string) {\n        if(string) return this.http.get(`/book/searchResult/${string}`);\n        return this.http.get('/book/getBooks');\n    }\n}","import { NbMenuService, NbDialogRef } from '@nebular/theme';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../@service';\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-add-book',\n  styleUrls: ['./add-book.component.scss'],\n  templateUrl: './add-book.component.html',\n})\nexport class AddBookComponent implements OnInit {\n  bookForm: FormGroup\n  @Input() type;\n  @Input() data;\n  constructor(protected ref: NbDialogRef<AddBookComponent>,private formBuilder: FormBuilder) {\n    this.bookForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      author: ['', [Validators.required]],\n      publish: ['', [Validators.required]],\n      stock: ['', [Validators.required]],\n      takehome: [false]\n    });\n  }\n\n  ngOnInit() {\n    if(this.type == 'Update') {\n      this.bookForm.setValue({\n        name: this.data.name, \n        author: this.data.author,\n        publish: this.data.publish,\n        stock: this.data.stock,\n        takehome: this.data.takehome,\n      });\n      this.bookForm.addControl('id', this.formBuilder.control(this.data._id));\n    }\n  }\n\n  cancel() {\n    this.ref.close();\n  }\n\n  // Function send book data to parent component.\n  addBook() {\n    if(this.bookForm.valid) {\n      this.ref.close(this.bookForm.value);\n    }\n  }\n\n}\n","<nb-card size=\"medium\">\n    <nb-card-header>New Book Details</nb-card-header>\n    <nb-card-body>\n        <form  [formGroup]=\"bookForm\"  >\n          <div class=\"form-group row\">\n            <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Name</label>\n            <div class=\"col-sm-9\">\n              <input type=\"text\" nbInput fullWidth id=\"inputname\" formControlName=\"name\" placeholder=\"name\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"inputauthor\" class=\"label col-sm-3 col-form-label\">Author</label>\n            <div class=\"col-sm-9\">\n              <input type=\"text\" nbInput fullWidth id=\"inputauthor\" formControlName=\"author\" placeholder=\"Kelly Rimmer \">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"inputpublish\" class=\"label col-sm-3 col-form-label\">Publish</label>\n            <div class=\"col-sm-9\">\n              <input type=\"text\" nbInput fullWidth id=\"inputpublish\" formControlName=\"publish\" placeholder=\"2019 Harlequin Enterprises, Limited\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"inputstock\" class=\"label col-sm-3 col-form-label\">Stock</label>\n            <div class=\"col-sm-9\">\n              <input type=\"number\" nbInput fullWidth id=\"inputstock\" formControlName=\"stock\" min=\"1\">\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-sm-3 label\">Take home</label>\n            <div class=\"col-sm-9\">\n                <nb-checkbox formControlName='takehome'></nb-checkbox>\n            </div>\n          </div>\n        </form>\n      </nb-card-body>\n    <nb-card-footer align='right'>\n        <button class=\"cancel\" nbButton status=\"danger\" (click)=\"cancel()\">Cancel</button>\n        <button nbButton status=\"success\" (click)=\"addBook()\"><span *ngIf=\"type == 'New'; else updateBtn\">Create</span></button>\n        <ng-template #updateBtn>Update</ng-template>\n        \n    </nb-card-footer>\n</nb-card>","import { NbMenuService, NbDialogRef } from '@nebular/theme';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../@service';\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-alert-dialog',\n  styleUrls: ['./alert-dialog.component.scss'],\n  templateUrl: './alert-dialog.component.html',\n})\nexport class AlertDialogComponent implements OnInit {\n    @Input() title;\n    constructor(protected ref: NbDialogRef<AlertDialogComponent>) {}\n\n    ngOnInit() {\n\n    }\n\n    cancel(res) {\n        this.ref.close(res);\n    }\n}","<nb-card >\n    <nb-card-body>\n       <div>{{title}}</div>\n    </nb-card-body>\n    <nb-card-footer align='right'>\n        <button class=\"cancel\" nbButton status=\"danger\" size='small' (click)=\"cancel(false)\">Cancel</button>\n        <button nbButton status=\"success\" size='small' (click)=\"cancel(true)\">Yes</button>\n    </nb-card-footer>\n</nb-card>","import { NbMenuService, NbDialogService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../../@service/issue.service';\nimport { AlertDialogComponent } from '../../alertdialog/alert-dialog.component';\nimport * as moment from 'moment';\n@Component({\n  selector: 'ngx-admin-issue',\n  styleUrls: ['./admin-issue.component.scss'],\n  templateUrl: './admin-issue.component.html',\n})\nexport class AdminIssueComponent implements OnInit {\n  requestList: any = [];\n  issuedList: any = [];\n  constructor(private issueService: IssueService,\n              private dialogService: NbDialogService) {\n\n  }\n\n  ngOnInit() {\n    this.getAdminOldData();\n    this.issueService.adminIssueList.subscribe((data: any) => {\n      if(data) this.requestList = data;\n    })\n\n    this.issueService.updatedReqList().subscribe((data: any) => {\n      this.getAdminOldData();\n    });\n  }\n\n  // Function to approve book.\n  approvalBook(issue, approval) {\n    let title = \"Accept the request of '\"+ issue.book.name +\"' by '\"+issue.user.username+\"' ?\";\n    if(!approval) title = \"Decline the request of '\"+ issue.book.name +\"' by '\"+issue.user.username+\"' ?\";\n    if(issue.returnrequest) title = \"Accept return request of '\"+ issue.book.name +\"' by '\"+issue.user.username+\"' ?\";\n    this.dialogService.open(AlertDialogComponent,{\n      context: {\n        title: title,\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          let approvalData = {\n            issueDets: issue,\n            approval: approval,\n            returnreq: false,\n          }\n          if(issue.returnrequest) approvalData.returnreq = true;\n          this.issueService.approvalByAdmin(approvalData);\n        }\n      });\n  }\n\n  // Function to get all users issued book list.\n  getAdminOldData(){\n    this.issueService.getAdminAllOldData().subscribe((data:any) => {\n      this.issuedList = data;\n      this.filterData();\n    })\n  }\n\n  // Function to change format of timestamp to local time.\n  filterData() {\n    for(let item of this.issuedList) {\n      item.requesttime = moment(item.requesttime).format('YYYY-MM-DD (HH:mm)');\n      item.issuedtime = moment(item.issuedtime).format('YYYY-MM-DD (HH:mm)');\n      if(item.returntime )item.returntime = moment(item.returntime).format('YYYY-MM-DD (HH:mm)');\n    }\n }\n}\n","<div class=\"row col-sm-12\">\n    <div class=\"col-sm-6\">\n        <nb-card style=\"height: 80vh;\">\n            <nb-card-header>\n                <div class=\"heading\">Request List</div>\n            </nb-card-header>\n            <nb-card-body>\n                <table class=\"issuetable\" style=\"width: 100%;\">\n                    <tr>\n                        <th class=\"issueHead\">User</th>\n                        <th class=\"issueHead\">Book</th>\n                        <th class=\"issueHead\">Take Home</th>\n                        <th class=\"issueHead\">type</th>\n                        <th class=\"issueHead\">Action</th>\n                    </tr>\n                    <tr *ngFor=\"let item of requestList; \" class=\"eachIssue\">\n                        <td class=\"issueData\">{{ item.user.username }}</td>\n                        <td class=\"issueData\">{{ item.book.name }}</td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.takehome; else printNo\"><nb-icon icon=\"check\" status=\"success\" pack='solid'></nb-icon></span> </td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.pending else returnreq\">Issue</span> </td>\n                        <td class=\"issueData \"> \n                            <div style=\"display: flex;\">\n                                <button (click)=\"approvalBook(item, false)\" *ngIf=\"item.pending\" nbButton status=\"danger\" shape='round' ghost><nb-icon icon=\"times\" pack='solid'></nb-icon></button>\n                                <button (click)=\"approvalBook(item, true)\" nbButton status=\"success\" shape='round' ghost><nb-icon icon=\"check\" pack='solid'></nb-icon></button>\n                            </div>\n                        </td>\n                    </tr>\n                    <ng-template #printNo><nb-icon icon=\"times\" status=\"danger\" pack='solid'></nb-icon></ng-template>\n                    <ng-template #returnreq>Return</ng-template>\n                    \n                    \n                </table>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-sm-6\">\n      <nb-card style=\"height: 80vh;\">\n          <nb-card-header>\n              <div class=\"heading\">Issued List</div>\n          </nb-card-header>\n          <nb-card-body>\n              <table class=\"issuetable\" style=\"width: 100%;\">\n                  <tr>\n                      <th class=\"issueHead\">User</th>\n                      <th class=\"issueHead\">Book</th>\n                      <th class=\"issueHead\">Take Home</th>\n                      <th class=\"issueHead\">Approval</th>\n                      <th class=\"issueHead\">Issued Time</th>\n                      <th class=\"issueHead\">Returned Time</th>\n                  </tr>\n                  <tr *ngFor=\"let item of issuedList; \" class=\"eachIssue\">\n                      <td class=\"issueData\">{{ item.user.username }}</td>\n                      <td class=\"issueData\">{{ item.book.name }}</td>\n                      <td class=\"issueData \"> <span *ngIf=\"item.takehome; else printNo\"><nb-icon icon=\"check\" status=\"success\" pack='solid'></nb-icon></span> </td>\n                      <td class=\"issueData \"> <span *ngIf=\"item.approval; else printNo\"><nb-icon icon=\"check\" status=\"success\" pack='solid'></nb-icon></span> </td>\n                      <td class=\"issueData \"> <span *ngIf=\"item.approval else noData\">{{ item.issuedtime }}</span> </td>\n                      <td class=\"issueData \"> <span *ngIf=\"item.returntime else noData\">{{ item.returntime }}</span></td>\n                  </tr>\n                  <ng-template #printNo><nb-icon icon=\"times\" status=\"danger\" pack='solid'></nb-icon></ng-template>\n                  <ng-template #noData>-</ng-template>\n                  \n                  \n              </table>\n          </nb-card-body>\n      </nb-card>\n  </div>\n</div>","import { NbMenuService } from '@nebular/theme';\nimport { Component } from '@angular/core';\nimport { AuthenticationService } from '../../@service';\n\n@Component({\n  selector: 'ngx-issue',\n  styleUrls: ['./issue.component.scss'],\n  templateUrl: './issue.component.html',\n})\nexport class IssueComponent {\n  isadmin: boolean = false;\n  constructor(private authService: AuthenticationService) {\n    if(this.authService.isAdmin) {\n      this.isadmin = true;\n    }\n  }\n\n}\n","<ng-container *ngIf=\"isadmin; else notAdmin\">\n    <ngx-admin-issue></ngx-admin-issue>\n</ng-container>\n\n<ng-template #notAdmin>\n    <ngx-user-issue></ngx-user-issue>\n</ng-template>\n\n","import { NbMenuService, NbDialogService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { IssueService } from '../../../@service/issue.service';\nimport { AlertDialogComponent } from '../../alertdialog/alert-dialog.component';\nimport { AuthenticationService } from '../../../@service';\nimport * as moment from 'moment';\nimport { ReturnDialogComponent } from '../../returnalertdialog/return-alert.component';\n@Component({\n  selector: 'ngx-user-issue',\n  styleUrls: ['./user-issue.component.scss'],\n  templateUrl: './user-issue.component.html',\n})\nexport class UserIssueComponent implements OnInit {\n  requestList:any =[];\n  issuedList: any = [];\n  constructor(private issueService: IssueService, \n              private dialogService: NbDialogService,\n              private authService: AuthenticationService\n              ) {\n    this.issueService.userIssueList.subscribe((data: any) => {\n      if(data) this.requestList = data;\n    })\n  }\n\n  ngOnInit() {\n    this.getUserAllIssuedList();\n\n    this.issueService.approvalReceiveUser().subscribe((data:any) => {\n      this.issueService.userIssueList.next(data.toUserReqList);\n      this.issuedList = data.toUserIssuedList;\n      this.filterData();\n    });\n\n    this.issueService.userUpdatedReqList().subscribe(data => {\n      this.getUserAllIssuedList();\n    });\n  }\n\n  // Function to delete book issue request.\n  deleteRequest(issue) {\n    this.dialogService.open(AlertDialogComponent,{\n      context: {\n        title: \"Are you sure want to delete issue request '\"+issue.book.name+\"' ?\",\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          let deleteData = {\n            issueDets: issue,\n            user: this.authService.currentUserValue\n          }\n          this.issueService.deleteRequest(deleteData);\n        }\n      });\n  }\n\n  // Funtion to get users history issued list data\n  getUserAllIssuedList(){\n    this.issueService.getUserDataList(this.authService.currentUserValue).subscribe((data:any) => {\n      this.issuedList = data;\n      this.filterData();\n    })\n  }\n\n  // Function to change format of timestamp to local time.\n  filterData() {\n     for(let item of this.issuedList) {\n       item.requesttime = moment(item.requesttime).format('YYYY-MM-DD (HH:mm)');\n       item.issuedtime = moment(item.issuedtime).format('YYYY-MM-DD (HH:mm)');\n       if(item.returntime )item.returntime = moment(item.returntime).format('YYYY-MM-DD (HH:mm)');\n     }\n  }\n\n  // Function to delete old issued data. \n  deleteIssue(issue) {\n    this.dialogService.open(AlertDialogComponent,{\n      context: {\n        title: \"Are you sure want to delete info of '\"+issue.book.name+\"' ?\",\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          this.issueService.deleteOldIssuedBook(issue).subscribe((data: any) => {\n            this.issuedList = data;\n            this.filterData();\n            this.issueService.showToast('success', \"Deleted Issued record\", \"Successful\");\n          });\n        }\n      });\n  }\n\n  // Function to book return request to admin.\n  async returnIssue(issue) {\n    let checkTime = await this.checktime(); // check for action is happening in the given time slot.\n    if(checkTime) {\n      let lateDayReturn  = await this.oneDayReturnCheck(issue); // if issued to \"Read\" check if returning on the same day of issue.\n      let lateTakeHomeReturn;\n      if(issue.takehome) lateTakeHomeReturn = await this.takeHomeReturnCheck(issue); // if issued to \"Take Home\" check if returning before 7th day of issue.\n      let note = '';\n      if(lateDayReturn || lateTakeHomeReturn) note = 'You are submitting late! There will be fine for late submission.';\n      this.dialogService.open(ReturnDialogComponent,{\n        context: {\n          title: \"Return book '\"+issue.book.name+\"' ?\",\n          note: note\n        },})\n        .onClose.subscribe((data:any) => {\n          if(data) {\n            this.issueService.userReturnBook(issue);\n          }\n        });\n    }\n    else {\n      this.issueService.showToast('danger', \"Book return time 10:00 AM to 05:00 PM\", \"Request Cancelled\");\n    }\n  }\n\n  // Function to check return request in allowed time.\n  checktime() {\n    const currentTime = moment();\n    const startTime = moment(\"10:00\", 'HH:mm'); // Start time fixed to 10:00AM\n    const endTime = moment(\"17:00\", 'HH:mm'); // End time fixed to 17:00 (5:00 PM)\n    return currentTime.isBetween(startTime, endTime); // Boolean value if return time is between 10:00 AM and 5:00 PM\n  }\n\n  // Function to check return request if submission is delayed. For read books.\n  oneDayReturnCheck(issue) {\n    const currentTime = moment();\n    const getDate = moment(new Date(issue.issuedtime)).format(\"YYYY-MM-DD\"); // Getting issued date\n    const expectedReturnTime = moment(getDate+' 17:00', 'YYYY-MM-DD HH:mm').format(); // Fixing boundry to 5:00 PM\n    return currentTime.isAfter(expectedReturnTime) ; // Boolean value return if return time exceeds issued date 5:00 PM\n  }\n\n  // Function to check return request if submission is delayed. For take home books.\n  takeHomeReturnCheck(issue) {\n    const currentTime = moment();\n    const getDate = moment(new Date(issue.issuedtime)).add(7, 'days').format(\"YYYY-MM-DD\"); // Getting issued date and adding 7 days to it.\n    const expectedReturnTime = moment(getDate+' 17:00', 'YYYY-MM-DD HH:mm').format(); // Fixing boundry to 5:00 PM\n    return currentTime.isAfter(expectedReturnTime) ; // Boolean value return if return time exceeds 7th day of issued date 5:00 PM\n  }\n}\n","<div class=\"row col-sm-12\">\n    <div class=\"col-sm-5\">\n        <nb-card style=\"height: 80vh;\">\n            <nb-card-header>\n                <div class=\"heading\">Request List</div>\n                <hr>\n                <div class=\"row col-sm-12\" style=\"padding: 0;\">\n                    <div class=\"col-sm-7 offset-1 \">Book</div>\n                    <div class=\"col-sm-3 offset-1 \">Action</div>\n                </div>\n            </nb-card-header>\n            <nb-list>\n                <nb-list-item *ngFor=\"let item of requestList\">\n                    <div class=\"row col-sm-12\" style=\"padding: 0;\">\n                        <div class=\"col-sm-8 tableHead\">{{ item.book.name }}</div>\n                        <div class=\"col-sm-4 tableHead\"> \n                            <button (click)=\"deleteRequest(item)\" *ngIf=\"item.pending\" nbButton status=\"danger\" shape='round' ghost><nb-icon icon=\"trash-alt\" pack='regular'></nb-icon></button>\n                            <button *ngIf=\"item.returnrequest\" nbButton status=\"danger\" shape='round' disabled ghost>Pending</button>\n                        </div>\n                    </div>\n                </nb-list-item>\n            </nb-list>\n        </nb-card>\n    </div>\n    <div class=\"col-sm-7\">\n        <nb-card style=\"height: 80vh;\">\n            <nb-card-header>\n                <div class=\"heading\">My Issue List</div>\n            </nb-card-header>\n            <nb-card-body>\n                <table class=\"issuetable\" style=\"width: 100%;\">\n                    <tr>\n                        <th class=\"issueHead\">Book</th>\n                        <th class=\"issueHead\">Take Home</th>\n                        <th class=\"issueHead\">Approval</th>\n                        <th class=\"issueHead\">Issued Time</th>\n                        <th class=\"issueHead\">Returned Time</th>\n                        <th class=\"issueHead\">Action</th>\n                    </tr>\n                    <tr *ngFor=\"let item of issuedList; \" class=\"eachIssue\">\n                        <td class=\"issueData\">{{ item.book.name }}</td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.takehome; else printNo\"><nb-icon icon=\"check\" status=\"success\" pack='solid'></nb-icon></span> </td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.approval; else printNo\"><nb-icon icon=\"check\" status=\"success\" pack='solid'></nb-icon></span> </td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.approval else noData\">{{ item.issuedtime }}</span> </td>\n                        <td class=\"issueData \"> <span *ngIf=\"item.returntime else noData\">{{ item.returntime }}</span></td>\n                        <td class=\"issueData \" >\n                            <div style=\"display: flex;\">\n                                <button (click)=\"returnIssue(item)\" *ngIf=\"!item.returntime && item.approval && !item.returnrequest\" nbButton status=\"primary\" title=\"Return Book\" shape='round' ghost>Return</button>\n                                <button (click)=\"deleteIssue(item)\" *ngIf=\"item.returntime || !item.approval\" nbButton status=\"danger\" shape='round' ghost>Delete</button>\n                                <button *ngIf=\"item.returnrequest\" nbButton status=\"danger\" shape='round' ghost disabled>Pending</button>\n                            </div>\n                        </td>\n                    </tr>\n                    <ng-template #printNo><nb-icon icon=\"times\" status=\"danger\" pack='solid'></nb-icon></ng-template>\n                    <ng-template #noData>-</ng-template>\n                    \n                    \n                </table>\n            </nb-card-body>\n        </nb-card>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { AddBookComponent } from '../../addbookdialog/add-book.component';\nimport { LibraryService } from '../../../@service/library.service';\nimport { AlertDialogComponent } from '../../alertdialog/alert-dialog.component';\nimport {\n  NbDialogService,\n  NbComponentStatus,\n  NbGlobalPhysicalPosition,\n  NbGlobalPosition,\n  NbToastrService,\n  NbToastrConfig,\n} from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-admin-library',\n  styleUrls: ['./admin-library.component.scss'],\n  templateUrl: './admin-library.component.html',\n})\nexport class AdminLibraryComponent implements OnInit {\n  @Input()booksList;\n  position: NbGlobalPosition = NbGlobalPhysicalPosition.TOP_LEFT;\n  config: NbToastrConfig;\n  constructor(private dialogService: NbDialogService, private libraryService: LibraryService,private toastrService: NbToastrService) {\n  }\n\n  ngOnInit() {\n  }\n\n  // Function to add new book.\n  addNewBook() {\n    this.dialogService.open(AddBookComponent,{\n      context: {\n        type: 'New',\n        data: ''\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          this.libraryService.createBook(data).subscribe((data: any) => {\n            this.booksList = data;\n            this.showToast('success', \"New Book created\", \"Successfull!\");\n          })\n        }\n      });\n  }\n\n  // Function to update existing book.\n  updateBook(book) {\n    this.dialogService.open(AddBookComponent,{\n      context: {\n        type: 'Update',\n        data: book\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          this.libraryService.updateBook(data).subscribe((data: any) => {\n            this.booksList = data;\n            this.showToast('success', \"Updated\", \"Successfull!\");\n          })\n        }\n      });\n  }\n\n  // Function to delete existing book.\n  deleteBook(book) {\n    this.dialogService.open(AlertDialogComponent,{\n      context: {\n        title: 'Are you Sure want to delete book \"'+ book.name+ '\" ?',\n      },})\n      .onClose.subscribe((data:any) => {\n        if(data) {\n          this.libraryService.deleteBook(book).subscribe((data: any) => {\n            this.booksList = data;\n            this.showToast('success', \"Deleted\", \"Successfull!\");\n          })\n        }\n      });\n  }\n\n  // Function to show toastr notification.\n  showToast(type: NbComponentStatus, title: string, body: string) {\n    const config = {\n      status: type,\n      destroyByClick: true,\n      duration: 3000,\n      hasIcon: true,\n      position: this.position,\n      preventDuplicates: false,\n    };\n\n    this.toastrService.show(\n      body,\n      title,\n      config);\n  }\n\n  // Function to search for books.\n  searchText(event) {\n    this.libraryService.getSearchResults(event.target.value).subscribe(data => {\n      this.booksList = data;\n    })\n  }\n}\n","<nb-card>\n    <nb-card-header>\n        <div class=\"row\">\n            <div class=\"col-sm-10\"><input type=\"text\" nbInput (keyup)=\"searchText($event)\" fullWidth placeholder=\"Type here to search...\"></div>\n            <div class=\"col-sm-2\"><button  nbButton status=\"primary\" (click)=\"addNewBook()\">Add Book</button></div>\n        </div>\n    </nb-card-header>\n    <nb-card-body>\n        <nb-alert *ngIf=\"booksList.length == 0 \" outline=\"warning\" style=\"margin: 0;\">No search results. </nb-alert>\n    </nb-card-body>\n</nb-card>\n\n<div class=\"row col-sm-12\" *ngIf=\"booksList.length > 0\">\n    <div class=\"col-sm-4\" *ngFor=\"let item of booksList\">\n        <nb-card style=\"height: 30vh;\">\n            <nb-card-header style=\"text-align: center;\">\n                <h6>{{item.name}}</h6>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Author</label>\n                    <div class=\"col-sm-9\">{{item.author}}</div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Publish</label>\n                    <div class=\"col-sm-9\">{{item.publish}}</div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Stock</label>\n                    <div class=\"col-sm-9\">{{item.stock}}</div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Take Home</label>\n                    <div class=\"col-sm-9\"><nb-checkbox [checked]=item.takehome disabled></nb-checkbox></div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer align=right>\n                <button class=\"cancel\" nbButton status=\"success\" size='small' (click)=\"updateBook(item)\">Update</button>\n                <button nbButton status=\"danger\" size='small' (click)=\"deleteBook(item)\">Delete</button>\n            </nb-card-footer>\n        </nb-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../@service';\nimport { LibraryService } from '../../@service/library.service';\nimport { IssueService } from '../../@service/issue.service';\n\n\n@Component({\n  selector: 'ngx-library',\n  styleUrls: ['./library.component.scss'],\n  templateUrl: './library.component.html',\n})\nexport class LibraryComponent implements OnInit  {\n  allBooks:any = [];\n  isadmin: boolean = false;\n  \n  constructor(private authService: AuthenticationService, private libraryService: LibraryService, private issueService: IssueService ) {\n    if(this.authService.isAdmin) {\n      this.isadmin = true;\n    }\n    \n  }\n\n  ngOnInit() {\n    this.getLibrary();\n    \n    this.issueService.updateAllUsers().subscribe(data => {\n      this.getLibrary();\n    })\n  }\n\n  // Function to get all books.\n  getLibrary() {\n    this.libraryService.getAllBooks().subscribe((data:any) => {\n      this.allBooks = data;\n    })\n  }\n\n  \n\n}\n","<ng-container *ngIf=\"isadmin; else notAdmin\">\n    <ngx-admin-library  [booksList]='allBooks'></ngx-admin-library>\n</ng-container>\n\n<ng-template #notAdmin>\n    <ngx-user-library [booksList]='allBooks'></ngx-user-library>\n</ng-template>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { AlertDialogComponent } from '../../alertdialog/alert-dialog.component';\nimport { IssueService } from '../../../@service/issue.service';\nimport { AuthenticationService } from '../../../@service';\nimport * as moment from 'moment';\nimport { LibraryService } from '../../../@service/library.service';\n\n@Component({\n  selector: 'ngx-user-library',\n  styleUrls: ['./user-library.component.scss'],\n  templateUrl: './user-library.component.html',\n})\nexport class UserLibraryComponent  implements OnInit{\n  @Input() booksList;\n  userData: any = '';\n  membershipDays;\n  constructor(private dialogService: NbDialogService, \n            private issueService: IssueService, \n            private libraryService: LibraryService, \n            private authService: AuthenticationService) {\n   \n  }\n\n  ngOnInit() {\n    this.userData = this.authService.currentUserValue;\n    this.authService.reduceMemberShipDays();\n    this.authService.currentUserSubject.subscribe((data: any) => {\n      if(data) this.membershipDays = data.membership;\n    })\n  }\n\n  // This funtion is triggered on click of \"Read\" or \"Take home\" button by user.\n  async issueBook(book, takeHome) {\n    let checkTime = await this.checktime();\n    if (checkTime) {\n      if(takeHome) {\n        if(this.membershipDays > 5) this.issueFuntion(book, takeHome);\n        else this.issueService.showToast('warning', \"Your membership is expiring\", \"Request Cancelled\");\n      }\n      else this.issueFuntion(book, takeHome);\n    }\n    else {\n      this.issueService.showToast('danger', \"Issue Time 10:00 AM to 03:00 PM\", \"Request Cancelled\");\n    }\n  }\n\n  // Function call to send issue request.\n  issueFuntion(book, takeHome) {\n    let title = 'Request book \"' + book.name + '\" to read ?'\n      if (takeHome) title = 'Request book \"' + book.name + '\" to take home ?'\n      this.dialogService.open(AlertDialogComponent, {\n        context: {\n          title: title,\n        },\n      })\n        .onClose.subscribe((data: any) => {\n          if (data) {\n            const sendReqData = {\n              userId: this.userData.id,\n              takeHome,\n              bookId: book._id\n            }\n            this.issueService.requestIssue(sendReqData);\n          }\n        });\n  }\n\n  // Function to check issue request is done in allowed time.\n  checktime() {\n    const currentTime = moment().format();\n    const startTime = moment(\"10:00\", 'HH:mm').format(); // start time fixed to 10:00AM\n    const endTime = moment(\"15:00\", 'HH:mm').format(); // end time fixed to 15:00 (3:00 PM)\n    return moment(currentTime).isBetween(startTime, endTime);\n  }\n\n  // Function to search for books.\n  searchText(event) {\n    this.libraryService.getSearchResults(event.target.value).subscribe(data => {\n      this.booksList = data;\n    })\n  }\n\n}\n","<div class=\"row col-sm-12\" >\n    <div class=\"col-sm-12\" >\n        <nb-card>\n            <nb-card-header>\n                <input type=\"text\" nbInput (keyup)=\"searchText($event)\" fullWidth placeholder=\"Type here to search...\">\n            </nb-card-header>\n            <nb-card-body>\n                <nb-alert *ngIf=\"membershipDays && 5 > membershipDays \" outline=\"warning\" style=\"margin: 0;\">Your Membership is expiring in 5 days.</nb-alert>\n                <nb-alert *ngIf=\"booksList.length == 0 \" outline=\"warning\" style=\"margin: 0;\">No search results. </nb-alert>\n            </nb-card-body>\n        </nb-card>\n    </div>\n    <div class=\"col-sm-4\" *ngFor=\"let item of booksList\">\n        <nb-card style=\"height: 30vh;\">\n            <nb-card-header style=\"text-align: center;\">\n                <nb-badge *ngIf=\"item.stock == 0\" text=\"Out of stock\" status=\"danger\"  position=\"top right\"></nb-badge>\n                <h6>{{item.name}}</h6>\n            </nb-card-header>\n            <nb-card-body>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Author</label>\n                    <div class=\"col-sm-9\">{{item.author}}</div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Publish</label>\n                    <div class=\"col-sm-9\">{{item.publish}}</div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputname\" class=\"label col-sm-3 col-form-label\">Stock</label>\n                    <div class=\"col-sm-9\">{{item.stock}}</div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer align=right>\n                <button class=\"cancel\" nbButton status=\"success\" size='small' *ngIf=\"item.takehome\" (click)=\"issueBook(item, true)\" [disabled]=\"item.stock == 0\"  >Take Home</button>\n                <button nbButton status=\"primary\" size='small' (click)=\"issueBook(item, false)\" [disabled]=\"item.stock == 0\"  >Read</button>\n            </nb-card-footer>\n        </nb-card>\n    </div>\n</div>","import { NbMenuService } from '@nebular/theme';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-not-found',\n  styleUrls: ['./not-found.component.scss'],\n  templateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent {\n\n  constructor(private menuService: NbMenuService) {\n  }\n\n  goToHome() {\n    this.menuService.navigateHome();\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-body>\n        <div class=\"flex-centered col-xl-4 col-lg-6 col-md-8 col-sm-12\">\n          <h2 class=\"title\">404 Page Not Found</h2>\n          <small class=\"sub-title\">The page you were looking for doesn't exist</small>\n          <button nbButton fullWidth (click)=\"goToHome()\" type=\"button\" class=\"home-button\">\n            Take me home\n          </button>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { NbMenuItem } from '@nebular/theme';\n\nexport const MENU_ITEMS: NbMenuItem[] = [\n  {\n    title: 'Library',\n    icon: {\n      icon: 'book',\n      pack: 'solid',\n    },\n    link: '/pages/library',\n    home: true,\n  },\n  {\n    title: 'Issue List',\n    icon: {\n      icon: 'list-ul',\n      pack: 'solid',\n    },\n    link: '/pages/issue',\n  },\n  \n];","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nimport { PagesComponent } from './pages.component';\nimport { NotFoundComponent } from './miscellaneous/not-found/not-found.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LibraryComponent } from './library/library.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { AdminGuardService } from '../_helpers';\n\nconst routes: Routes = [\n  {\n  path: '',\n  component: PagesComponent,\n  children: [\n    {\n      path: 'library', \n      component: LibraryComponent,\n    },\n    {\n      path: 'profile', //user\n      component: ProfileComponent,\n      canActivate: [AdminGuardService]\n    },\n    {\n      path: 'issue',\n      component: IssueComponent,\n    },\n    {\n      path: 'miscellaneous',\n      loadChildren: () => import('./miscellaneous/miscellaneous.module')\n        .then(m => m.MiscellaneousModule),\n    },\n    {\n      path: '',\n      redirectTo: 'library',\n      pathMatch: 'full',\n    },\n    {\n      path: '**',\n      component: NotFoundComponent,\n    },\n  ],\n}\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagesRoutingModule {\n  \n  \n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { MENU_ITEMS } from './pages-menu';\nimport { AuthenticationService } from '../@service';\nimport { Router } from '@angular/router';\nimport { IssueService } from '../@service/issue.service';\nimport {\n  NbDialogService,\n} from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-pages',\n  styleUrls: ['pages.component.scss'],\n  template: `\n    <ngx-one-column-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-one-column-layout>\n  `,\n})\nexport class PagesComponent implements OnInit {\n  menu = MENU_ITEMS;\n  constructor(private authService: AuthenticationService,\n    private router: Router,\n    private issueService: IssueService) {\n  }\n\n  ngOnInit() {\n    this.issueService.setupSocketConnection();\n    this.issueService.joinRoom(this.authService.currentUserValue);\n\n    if (this.authService.isAdmin) {\n      this.adminSocketsSubscribes();\n    }\n    else {\n      this.userSocketsSubscribes();\n    }\n\n  }\n\n  adminSocketsSubscribes() {\n    //admin receiving any request from users;\n    this.issueService.updatedReqList().subscribe((data: any) => {\n      this.issueService.adminIssueList.next(data.result);\n      switch(data.type) {\n        case 'new': this.issueService.showToast('primary',\"Book Issue request\", \"New Request\");\n                    break;\n        case 'approval': this.issueService.showToast('success',\"Approval status\", \"Submitted successfully\");\n                          break;\n        case 'delete': this.issueService.showToast('warning',\"Request List is updated\", \"Check updated list\");\n                      break;\n        case 'return': this.issueService.showToast('primary',\"Return book request\", \"Request\");\n                      break;\n      }\n    })\n  }\n\n  userSocketsSubscribes() {\n    this.issueService.userUpdatedReqList().subscribe(data => {\n      let result = data.result;\n      this.issueService.userIssueList.next(result);\n      switch(data.type) {\n        case 'new': this.issueService.showToast('success',\"Book Issue\", \"Request Sent\");\n                    break;\n        case 'delete': this.issueService.showToast('success', \"Deleted Request\", \"Successfull\");\n                        break;\n        case 'return': this.issueService.showToast('success', \"Return Request\", \"Successfull\");\n                        break\n      }\n    });\n\n    this.issueService.approvalReceiveUser().subscribe((data:any) => {\n      this.issueService.userIssueList.next(data.toUserReqList);\n      if(data.approval ) {\n        if(data.return) this.issueService.showToast('success', 'Return Book is approved', 'successfull')  \n        else this.issueService.showToast('success', 'Book issue is approved', 'successfull')\n      } \n      else this.issueService.showToast('warning', 'Book is declined', 'Rejected')\n    })\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  NbMenuModule,\n  NbSelectModule,\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbCheckboxModule,\n  NbListModule,\n  NbUserModule,\n  NbLayoutModule,\n  NbDialogModule,\n  NbInputModule,\n  NbAlertModule,\n  NbRadioModule,\n  NbBadgeModule\n} from '@nebular/theme';\n\nimport { ThemeModule } from '../@theme/theme.module';\n\nimport { PagesRoutingModule } from './pages-routing.module';\nimport { PagesComponent } from './pages.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LibraryComponent } from './library/library.component';\nimport { UserIssueComponent } from './issue/userissue/user-issue.component';\nimport { AdminIssueComponent } from './issue/adminissue/admin-issue.component';\nimport { IssueComponent } from './issue/issue.component';\nimport { AdminLibraryComponent } from './library/adminlibrary/admin-library.component';\nimport { UserLibraryComponent } from './library/userlibrary/user-library.component';\nimport { AddBookComponent } from './addbookdialog/add-book.component';\nimport { CommonModule } from '@angular/common';\nimport { AlertDialogComponent } from './alertdialog/alert-dialog.component';\nimport { ReturnDialogComponent } from './returnalertdialog/return-alert.component';\n\n@NgModule({\n  imports: [\n    PagesRoutingModule,\n    ThemeModule,\n    NbMenuModule,\n    NbSelectModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbSpinnerModule,\n    NbCheckboxModule,\n    NbListModule,\n    NbUserModule,\n    NbLayoutModule,\n    NbDialogModule,\n    NbInputModule,\n    NbAlertModule,\n    NbRadioModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NbBadgeModule\n  ],\n  declarations: [\n    PagesComponent,\n    ProfileComponent,\n    LibraryComponent,\n    UserIssueComponent,\n    AdminIssueComponent,\n    IssueComponent,\n    AdminLibraryComponent,\n    UserLibraryComponent,\n    AddBookComponent,\n    AlertDialogComponent,\n    ReturnDialogComponent\n  ],\n  entryComponents: [\n    LibraryComponent,\n    ProfileComponent,\n    UserIssueComponent,\n    AdminIssueComponent,\n    IssueComponent,\n    AdminLibraryComponent,\n    UserLibraryComponent,\n    AddBookComponent,\n    AlertDialogComponent,\n    ReturnDialogComponent\n  ]\n})\nexport class PagesModule {\n}\n","import { NbMenuService, NbDialogService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../@service';\nimport { IssueService } from '../../@service/issue.service';\nimport { AlertDialogComponent } from '../alertdialog/alert-dialog.component';\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-profile',\n  styleUrls: ['./profile.component.scss'],\n  templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n  updatingUserData: any;\n  myForm: FormGroup;\n  constructor(private authService: AuthenticationService,\n    private issueService: IssueService,\n    private formBuilder: FormBuilder,\n    private dialogService: NbDialogService) {\n\n    this.myForm = this.formBuilder.group({\n      newPassword: ['', [Validators.required]],\n      retypeNew: ['']\n    });\n    // Check if \"newPassword\" and \"retypeNew\" matches.\n    this.myForm.get('retypeNew').valueChanges.subscribe(val => {\n      if (val) {\n        if (val != this.myForm.get('newPassword').value) {\n          this.myForm.get('retypeNew').setErrors({ \"notMatch\": true });\n        }\n        if (val == this.myForm.get('newPassword').value) {\n          this.myForm.get('retypeNew').setErrors({ \"doesMatch\": true });\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getUserDets();\n  }\n\n  // Function to get user details.\n  getUserDets() {\n    this.authService.getUserDets().subscribe((data: any) => {\n      this.updatingUserData = data;\n      this.myForm.addControl('_id', this.formBuilder.control(data._id));\n    })\n  }\n\n  // Function to update user details.\n  updateDetails() {\n    this.dialogService.open(AlertDialogComponent, {\n      context: {\n        title: \"Are you sure want to update details ?\",\n      },\n    })\n      .onClose.subscribe((data: any) => {\n        if (data) {\n          this.authService.userUpdateDetails(this.updatingUserData).subscribe((data: any) => {\n            this.updatingUserData = data;\n            this.issueService.showToast('success', \"Updated Details\", \"Successful\");\n          })\n        }\n      });\n  }\n\n  // Function to password reset.\n  passwordReset() {\n    this.dialogService.open(AlertDialogComponent, {\n      context: {\n        title: \"Are you sure want to update details ?\",\n      },\n    })\n      .onClose.subscribe((data: any) => {\n        if (data) {\n          this.authService.userpasswordReset(this.myForm.value).subscribe((data: any) => {\n            this.issueService.showToast('success', \"Updated Password\", \"Successful\");\n          })\n        }\n      });\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-sm-7\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"heading\">Profile Details</div>\n            </nb-card-header>\n            <nb-card-body *ngIf=\"updatingUserData\">\n                <div class=\"form-group row\">\n                    <label for=\"inputName\" class=\"label col-sm-3 col-form-label\">Name</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" nbInput fullWidth id=\"inputName\" [(ngModel)]=\"updatingUserData.name\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputEmail1\" class=\"label col-sm-3 col-form-label\">Email</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"email\" nbInput fullWidth id=\"inputEmail1\" \n                            [(ngModel)]=\"updatingUserData.email\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputMobile\" class=\"label col-sm-3 col-form-label\">Mobile</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" nbInput fullWidth id=\"inputMobile\" [(ngModel)]=\"updatingUserData.mobile\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputGender\" class=\"label col-sm-3 col-form-label\">Gender</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"text\" nbInput fullWidth id=\"inputGender\" [(ngModel)]=\"updatingUserData.gender\"\n                            disabled>\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputMember\" class=\"label col-sm-3 col-form-label\">Membership (In days)</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"number\" nbInput fullWidth id=\"inputMember\" disabled\n                            [(ngModel)]=\"updatingUserData.membershipdays\">\n                    </div>\n                </div>\n                <div class=\"form-group row\">\n                    <label for=\"inputRead\" class=\"label col-sm-3 col-form-label\">Reading Hours (In hrs)</label>\n                    <div class=\"col-sm-9\">\n                        <input type=\"number\" min=\"1\" max=\"7\" nbInput fullWidth id=\"inputRead\" disabled\n                            [(ngModel)]=\"updatingUserData.readinghours\">\n                    </div>\n                </div>\n            </nb-card-body>\n            <nb-card-footer align='right'>\n                <button nbButton status=\"success\" size='small' (click)=\"updateDetails()\">Update</button>\n            </nb-card-footer>\n        </nb-card>\n    </div>\n    <div class=\"col-sm-5\">\n        <nb-card>\n            <nb-card-header>\n                <div class=\"heading\">Password Change</div>\n            </nb-card-header>\n            <nb-card-body *ngIf=\"updatingUserData\">\n                <form (ngSubmit)=\"setPassword()\" [formGroup]=\"myForm\" aria-labelledby=\"title\">\n                    <div class=\"form-group row\">\n                        <label for=\"inputpass\" class=\"label col-sm-3 col-form-label\">New Password</label>\n                        <div class=\"col-sm-9\">\n                            <input type=\"password\" formControlName=\"newPassword\" nbInput fullWidth id=\"inputpass\">\n                        </div>\n                    </div>\n                    <div class=\"form-group row\">\n                        <label for=\"inputRepass\" class=\"label col-sm-3 col-form-label\">Re-type Password</label>\n                        <div class=\"col-sm-9\">\n                            <input type=\"password\" formControlName=\"retypeNew\" nbInput fullWidth id=\"inputRepass\">\n                            <ng-container *ngIf=\"myForm.hasError('notMatch','retypeNew')\">\n                                <p class=\"caption status-danger\">\n                                    Password does not match!\n                                </p>\n                            </ng-container>\n                        </div>\n\n                    </div>\n                </form> \n            </nb-card-body>\n            <nb-card-footer align='right'>\n                <button nbButton status=\"success\" size='small' [disabled]=\"!myForm.hasError('doesMatch','retypeNew')\"\n                    (click)=\"passwordReset()\">Password Change</button>\n            </nb-card-footer>\n        </nb-card>\n    </div>\n</div>","import { NbMenuService, NbDialogRef } from '@nebular/theme';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-return-alert',\n  styleUrls: ['./return-alert.component.scss'],\n  templateUrl: './return-alert.component.html',\n})\nexport class ReturnDialogComponent implements OnInit {\n    @Input() title;\n    @Input() note;\n    constructor(protected ref: NbDialogRef<ReturnDialogComponent>) {}\n\n    ngOnInit() {\n\n    }\n\n    cancel(res) {\n        this.ref.close(res);\n    }\n}","<nb-card >\n    <nb-card-body>\n       <div>{{title}}</div>\n       <span *ngIf=\"note\" class=\"noteClass\">*Note: {{note}}</span>\n    </nb-card-body>\n    <nb-card-footer align='right'>\n        <button class=\"cancel\" nbButton status=\"danger\" size='small' (click)=\"cancel(false)\">Cancel</button>\n        <button nbButton status=\"success\" size='small' (click)=\"cancel(true)\">Yes</button>\n    </nb-card-footer>\n</nb-card>"],"sourceRoot":"webpack:///"}